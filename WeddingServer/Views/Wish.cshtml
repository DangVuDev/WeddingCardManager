@using WeddingServer.Dto.Model
@model IList<WishModel>

@{
    ViewData["Title"] = "Quản lý lời chúc";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Playfair+Display:wght@600;700&family=Dancing+Script:wght@600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --pink: #ec4899;
            --pink-dark: #db2777;
            --pink-light: #fff7fa;
            --pink-lighter: #fce7f3;
            --gray: #6b7280;
            --gray-dark: #374151;
            --shadow-sm: 0 2px 8px rgba(236, 72, 153, 0.08);
            --shadow-md: 0 4px 20px rgba(236, 72, 153, 0.12);
            --shadow-lg: 0 8px 30px rgba(236, 72, 153, 0.15);
        }

        body {
            margin: 0;
            padding: 0;
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #fff5f7 0%, #ffe5f1 25%, #fff0f8 50%, #fce4ec 75%, #fff5f7 100%);
            background-size: 400% 400%;
            animation: gradientShift 20s ease infinite;
            color: #333;
            min-height: 100vh;
        }

        @@keyframes gradientShift {
            0%, 100%

        {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 40px 20px;
        }

        /* Header Section */
        .page-header {
            text-align: center;
            margin-bottom: 50px;
            animation: fadeInDown 0.8s ease-out;
        }

        @@keyframes fadeInDown {
            from

        {
            opacity: 0;
            transform: translateY(-30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .page-title {
            font-family: 'Playfair Display', serif;
            font-size: clamp(2rem, 5vw, 3.5rem);
            color: var(--pink);
            margin-bottom: 12px;
            text-shadow: 0 2px 10px rgba(236, 72, 153, 0.2);
        }

        .page-subtitle {
            font-size: clamp(0.95rem, 2vw, 1.1rem);
            color: var(--gray);
            margin-bottom: 30px;
            line-height: 1.6;
        }

        .divider {
            width: 120px;
            height: 4px;
            background: linear-gradient(90deg, transparent, var(--pink), transparent);
            margin: 0 auto;
            border-radius: 2px;
        }

        /* Control Bar */
        .control-bar {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            align-items: center;
            gap: 20px;
            margin-bottom: 40px;
            padding: 25px;
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            box-shadow: var(--shadow-md);
            animation: fadeInUp 0.8s ease-out 0.2s both;
        }

        @@keyframes fadeInUp {
            from

        {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .search-wrapper {
            flex: 1;
            min-width: 280px;
            position: relative;
        }

        .search-icon {
            position: absolute;
            left: 18px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 18px;
            color: var(--gray);
            pointer-events: none;
        }

        .search-box {
            width: 100%;
            padding: 14px 20px 14px 50px;
            border: 2px solid var(--pink-lighter);
            border-radius: 50px;
            outline: none;
            font-size: 15px;
            transition: all 0.3s ease;
            background: white;
        }

            .search-box:focus {
                box-shadow: 0 0 0 4px rgba(236, 72, 153, 0.15);
                border-color: var(--pink);
            }

        .filter-group {
            display: flex;
            gap: 12px;
            flex-wrap: wrap;
        }

        .filter-btn, .sort-btn {
            padding: 12px 24px;
            border: 2px solid var(--pink-lighter);
            border-radius: 50px;
            background: white;
            color: var(--gray-dark);
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }

            .filter-btn:hover, .sort-btn:hover {
                background: var(--pink-light);
                border-color: var(--pink);
                transform: translateY(-2px);
            }

            .filter-btn.active, .sort-btn.active {
                background: var(--pink);
                color: white;
                border-color: var(--pink);
            }

        .stats-card {
            display: flex;
            align-items: center;
            gap: 12px;
            background: linear-gradient(135deg, var(--pink), var(--pink-dark));
            color: white;
            padding: 14px 28px;
            border-radius: 50px;
            font-weight: 600;
            font-size: 15px;
            box-shadow: var(--shadow-md);
            white-space: nowrap;
        }

        .stats-icon {
            font-size: 22px;
            animation: bounce 2s infinite;
        }

        @@keyframes bounce {
            0%, 100%

        {
            transform: translateY(0);
        }

        50% {
            transform: translateY(-5px);
        }

        }

        /* Wishes Grid */
        .wishes-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 25px;
            animation: fadeIn 0.8s ease-out 0.4s both;
        }

        @@keyframes fadeIn {
            from

        {
            opacity: 0;
        }

        to {
            opacity: 1;
        }

        }

        .wish-card {
            position: relative;
            background: white;
            border-radius: 24px;
            padding: 30px;
            box-shadow: var(--shadow-sm);
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            border: 2px solid transparent;
            overflow: hidden;
        }

            .wish-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(90deg, var(--pink), var(--pink-dark));
                transform: scaleX(0);
                transition: transform 0.4s ease;
            }

            .wish-card:hover {
                transform: translateY(-8px);
                box-shadow: var(--shadow-lg);
                border-color: var(--pink-lighter);
            }

                .wish-card:hover::before {
                    transform: scaleX(1);
                }

        .wish-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 16px;
            gap: 12px;
        }

        .wish-name {
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--gray-dark);
            flex: 1;
        }

        .wish-heart {
            font-size: 24px;
            animation: heartbeat 2s ease-in-out infinite;
            filter: drop-shadow(0 2px 4px rgba(236, 72, 153, 0.3));
        }

        @@keyframes heartbeat {
            0%, 100%

        {
            transform: scale(1);
        }

        50% {
            transform: scale(1.15);
        }

        }

        .wish-date {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            font-size: 13px;
            color: var(--gray);
            background: var(--pink-light);
            padding: 6px 14px;
            border-radius: 20px;
            margin-bottom: 16px;
            font-weight: 500;
        }

        .wish-message {
            font-size: 15px;
            color: #4b5563;
            line-height: 1.7;
            white-space: pre-line;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 80px 20px;
            animation: fadeIn 0.6s ease-out;
        }

        .empty-icon {
            font-size: 80px;
            margin-bottom: 20px;
            opacity: 0.5;
        }

        .empty-title {
            font-size: 1.5rem;
            color: var(--gray-dark);
            margin-bottom: 10px;
            font-weight: 600;
        }

        .empty-text {
            font-size: 1rem;
            color: var(--gray);
        }

        /* Loading Animation */
        .loading {
            display: none;
            text-align: center;
            padding: 40px;
        }

        .loading-spinner {
            width: 50px;
            height: 50px;
            border: 4px solid var(--pink-lighter);
            border-top-color: var(--pink);
            border-radius: 50%;
            animation: spin 0.8s linear infinite;
            margin: 0 auto;
        }

        @@keyframes spin {
            to

        {
            transform: rotate(360deg);
        }

        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .container

        {
            padding: 25px 15px;
        }

        .page-header {
            margin-bottom: 35px;
        }

        .control-bar {
            padding: 20px;
            gap: 15px;
        }

        .filter-group {
            width: 100%;
            justify-content: center;
        }

        .filter-btn, .sort-btn {
            flex: 1;
            justify-content: center;
        }

        .stats-card {
            width: 100%;
            justify-content: center;
        }

        .wishes-grid {
            grid-template-columns: 1fr;
            gap: 20px;
        }

        .wish-card {
            padding: 25px;
        }

        }

        @@media (max-width: 480px) {
            .page-title

        {
            font-size: 2rem;
        }

        .wish-card {
            padding: 20px;
        }

        .wish-name {
            font-size: 1.1rem;
        }

        .wish-heart {
            font-size: 20px;
        }

        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Page Header -->
        <div class="page-header">
            <h1 class="page-title">💞 Quản lý lời chúc</h1>
            <p class="page-subtitle">Nơi lưu giữ những lời chúc yêu thương gửi đến cặp đôi 💐</p>
            <div class="divider"></div>
        </div>

        <!-- Control Bar -->
        <div class="control-bar">
            <div class="search-wrapper">
                <span class="search-icon">🔍</span>
                <input type="text"
                       id="searchInput"
                       class="search-box"
                       placeholder="Tìm kiếm theo tên hoặc nội dung..." />
            </div>

            <div class="filter-group">
                <button class="sort-btn active" data-sort="newest">
                    📅 Mới nhất
                </button>
                <button class="sort-btn" data-sort="oldest">
                    🕐 Cũ nhất
                </button>
            </div>

            <div class="stats-card">
                <span class="stats-icon">💌</span>
                <span>Tổng: <strong id="totalCount">@Model.Count</strong> lời chúc</span>
            </div>
        </div>

        <!-- Wishes Grid -->
        <div id="wishList" class="wishes-grid">
            @foreach (var wish in Model.OrderByDescending(w => w.CreatedAt))
            {
                <div class="wish-card" data-date="@wish.CreatedAt.ToString("o")">
                    <div class="wish-header">
                        <h3 class="wish-name">@wish.Name</h3>
                        <div class="wish-heart">💝</div>
                    </div>
                    <div class="wish-date">
                        <span>🕐</span>
                        <span class="date-text">@wish.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                    </div>
                    <p class="wish-message">@wish.Message</p>
                </div>
            }
        </div>

        <!-- Empty State -->
        <div id="emptyState" class="empty-state" style="display: none;">
            <div class="empty-icon">🔍</div>
            <h2 class="empty-title">Không tìm thấy lời chúc</h2>
            <p class="empty-text">Thử tìm kiếm với từ khóa khác nhé!</p>
        </div>

        <!-- Loading -->
        <div class="loading" id="loading">
            <div class="loading-spinner"></div>
        </div>
    </div>

    <script>
        // Elements
        const searchInput = document.getElementById('searchInput');
        const wishList = document.getElementById('wishList');
        const emptyState = document.getElementById('emptyState');
        const totalCount = document.getElementById('totalCount');
        const sortButtons = document.querySelectorAll('.sort-btn');

        let allCards = Array.from(wishList.querySelectorAll('.wish-card'));
        const totalWishes = allCards.length;

        // Search functionality
        searchInput.addEventListener('input', () => {
            const query = searchInput.value.toLowerCase().trim();
            let visibleCount = 0;

            allCards.forEach(card => {
                const text = card.textContent.toLowerCase();
                const isVisible = text.includes(query);
                card.style.display = isVisible ? '' : 'none';
                if (isVisible) visibleCount++;
            });

            // Update UI
            emptyState.style.display = visibleCount === 0 ? 'block' : 'none';
            wishList.style.display = visibleCount === 0 ? 'none' : 'grid';
            totalCount.textContent = visibleCount;
        });

        // Sort functionality
        sortButtons.forEach(btn => {
            btn.addEventListener('click', () => {
                // Update active state
                sortButtons.forEach(b => b.classList.remove('active'));
                btn.classList.add('active');

                const sortType = btn.dataset.sort;

                // Sort cards
                allCards.sort((a, b) => {
                    const dateA = new Date(a.dataset.date);
                    const dateB = new Date(b.dataset.date);
                    return sortType === 'newest' ? dateB - dateA : dateA - dateB;
                });

                // Re-append cards in new order
                allCards.forEach(card => wishList.appendChild(card));
            });
        });

        // Format relative time (optional enhancement)
        function formatRelativeTime(dateStr) {
            const date = new Date(dateStr);
            const now = new Date();
            const diffMs = now - date;
            const diffMins = Math.floor(diffMs / 60000);
            const diffHours = Math.floor(diffMs / 3600000);
            const diffDays = Math.floor(diffMs / 86400000);

            if (diffMins < 1) return 'Vừa xong';
            if (diffMins < 60) return `${diffMins} phút trước`;
            if (diffHours < 24) return `${diffHours} giờ trước`;
            if (diffDays < 7) return `${diffDays} ngày trước`;

            return date.toLocaleDateString('vi-VN', {
                day: '2-digit',
                month: '2-digit',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        // Add smooth scroll to top button (optional)
        let scrollBtn = document.createElement('button');
        scrollBtn.innerHTML = '⬆️';
        scrollBtn.style.cssText = `
            position: fixed;
            bottom: 30px;
            right: 30px;
            width: 55px;
            height: 55px;
            border-radius: 50%;
            border: none;
            background: linear-gradient(135deg, var(--pink), var(--pink-dark));
            color: white;
            font-size: 24px;
            cursor: pointer;
            box-shadow: 0 4px 20px rgba(236, 72, 153, 0.3);
            display: none;
            transition: all 0.3s ease;
            z-index: 1000;
        `;
        scrollBtn.onmouseover = () => scrollBtn.style.transform = 'scale(1.1)';
        scrollBtn.onmouseout = () => scrollBtn.style.transform = 'scale(1)';
        scrollBtn.onclick = () => window.scrollTo({ top: 0, behavior: 'smooth' });
        document.body.appendChild(scrollBtn);

        window.addEventListener('scroll', () => {
            scrollBtn.style.display = window.scrollY > 300 ? 'block' : 'none';
        });

        // Initialize
        console.log(`Loaded ${totalWishes} wishes successfully! 💕`);
    </script>
</body>
</html>