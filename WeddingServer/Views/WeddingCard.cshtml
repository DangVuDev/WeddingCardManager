@using System.Text.Json
@using System.Text.Encodings.Web
@using WeddingServer.Dto.Model
@model WeddingConfigModel
@{
    ViewData["Title"] = "Thiệp Cưới";
    var options = new JsonSerializerOptions
    {
        PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
        Encoder = JavaScriptEncoder.UnsafeRelaxedJsonEscaping,
        WriteIndented = false
    };

    var configJson = JsonSerializer.Serialize(new
    {
        groomName = Model.GroomName,
        brideName = Model.BrideName,
        guestName = Model.GuestName,
        weddingDate = Model.WeddingDate.ToString("yyyy-MM-ddTHH:mm:ss"),
        weddingDateDisplay = Model.WeddingDateDisplay,
        weddingTime = Model.WeddingTime,
        venue = Model.Venue,
        address = Model.Address,
        mapUrl = Model.MapUrl,
        mapViewUrl = Model.MapViewUrl,
        heroImage = Model.HeroImage,
        musicUrl = Model.MusicUrl,
        timeline = Model.Timeline,
        dressCode = Model.DressCode,
        stories = Model.Stories,
        gallery = Model.Gallery,
        contacts = Model.Contacts
    }, options);

    var  endpoint = ViewData["guestEndpoint"]?.ToString();
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Title -->
    <title>Thiệp Cưới - Chú Rể & Cô Dâu</title>

    <!-- CRITICAL: Facebook/Messenger Meta Tags - PHẢI CÓ -->
    <meta property="og:type" content="website">
    <meta property="og:url" content="@endpoint">
    <meta property="og:title" content="💕 Thiệp Cưới - Thanh Bình & Trần Hiên">
    <meta property="og:description" content="Trân trọng kính mời bạn tham dự lễ cưới của chúng tôi.">

    <!-- Ảnh PHẢI dùng HTTPS và public URL -->
    <meta property="og:image" content="@Model.HeroImage">
    <meta property="og:image:secure_url" content="@Model.HeroImage">
    <meta property="og:image:type" content="image/jpeg">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="630">
    <meta property="og:image:alt" content="Thiệp cưới của chúng tôi">

    <meta property="og:locale" content="vi_VN">
    <meta property="og:site_name" content="Thiệp Cưới">

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:image" content="@Model.HeroImage">

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;600;700;800&family=Dancing+Script:wght@400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        /* ==================== LIQUID GLASS DESIGN - PINK THEME ==================== */

        :root {
            --pink-50: #fff1f5;
            --pink-100: #ffe4ec;
            --pink-200: #ffc9dc;
            --pink-300: #ff9dbd;
            --pink-400: #ff6b9d;
            --pink-500: #ff3d7f;
            --pink-600: #f01d66;
            --pink-700: #d10f54;
            --glass-white: rgba(255, 255, 255, 0.75);
            --glass-pink: rgba(255, 107, 157, 0.15);
            --glass-border: rgba(255, 255, 255, 0.4);
            --shadow-glass: 0 8px 32px 0 rgba(255, 107, 157, 0.15);
            --shadow-hover: 0 16px 48px 0 rgba(255, 107, 157, 0.25);
            --blur-sm: 12px;
            --blur-md: 20px;
            --blur-lg: 40px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        html {
            scroll-behavior: smooth;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #fff5f7 0%, #ffe4ec 25%, #ffd1e3 50%, #ffe4ec 75%, #fff5f7 100%);
            background-size: 400% 400%;
            animation: gradientShift 20s ease infinite;
            color: #2d1b2e;
            line-height: 1.6;
            overflow-x: hidden;
            -webkit-font-smoothing: antialiased;
            position: relative;
        }

            body::before {
                content: '';
                position: fixed;
                inset: 0;
                background: radial-gradient(circle at 20% 30%, rgba(255, 107, 157, 0.1) 0%, transparent 50%), radial-gradient(circle at 80% 70%, rgba(255, 61, 127, 0.08) 0%, transparent 50%), radial-gradient(circle at 50% 50%, rgba(255, 157, 189, 0.05) 0%, transparent 60%);
                pointer-events: none;
                z-index: 0;
            }

        ::selection {
            background: rgba(255, 107, 157, 0.3);
            color: #2d1b2e;
        }

        ::-webkit-scrollbar {
            width: 12px;
        }

        ::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.3);
            backdrop-filter: blur(10px);
        }

        ::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, var(--pink-300), var(--pink-400));
            border-radius: 10px;
            border: 2px solid rgba(255, 255, 255, 0.3);
        }

            ::-webkit-scrollbar-thumb:hover {
                background: linear-gradient(135deg, var(--pink-400), var(--pink-500));
            }

        /* ==================== LOADING SCREEN ==================== */
        /* ==================== LOADING SCREEN ==================== */
        
        /* ==================== TRANSITION SCREEN (LOADING) ==================== */
        .transition-screen {
            position: fixed;
            inset: 0;
            z-index: 9999;
            background: radial-gradient(ellipse at center, #ffe5ec 0%, #ffc9dc 30%, #ff9dbd 60%, #ff6b9d 100%);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            transition: opacity 1.5s ease, visibility 1.5s ease;
            overflow: hidden;
        }

            .transition-screen.hidden {
                opacity: 0;
                visibility: hidden;
                pointer-events: none;
            }

        /* Light Rings - Vòng sáng xoáy */
        .light-rings-container {
            position: absolute;
            inset: 0;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .light-ring {
            position: absolute;
            width: 150px;
            height: 150px;
            border: 3px solid rgba(255, 255, 255, 0.6);
            border-radius: 50%;
            opacity: 0;
            transform: scale(0);
            box-shadow: 0 0 30px rgba(255, 255, 255, 0.8), inset 0 0 20px rgba(255, 107, 157, 0.3);
            animation: swirlRing 3s ease-out infinite;
        }

            .light-ring:nth-child(1) {
                animation-delay: 0s;
                border-color: rgba(255, 255, 255, 0.8);
            }

            .light-ring:nth-child(2) {
                animation-delay: 0.2s;
                border-color: rgba(255, 215, 0, 0.6);
            }

            .light-ring:nth-child(3) {
                animation-delay: 0.4s;
                border-color: rgba(255, 182, 193, 0.7);
            }

            .light-ring:nth-child(4) {
                animation-delay: 0.6s;
                border-color: rgba(255, 255, 255, 0.5);
            }

            .light-ring:nth-child(5) {
                animation-delay: 0.8s;
                border-color: rgba(255, 107, 157, 0.6);
            }

        @@keyframes swirlRing {
            0%

        {
            opacity: 0;
            transform: scale(0) rotate(0deg);
            border-width: 3px;
        }

        30% {
            opacity: 0.8;
            border-width: 2px;
        }

        70% {
            opacity: 0.4;
            transform: scale(3) rotate(360deg);
            border-width: 1px;
        }

        100% {
            opacity: 0;
            transform: scale(5) rotate(720deg);
            border-width: 0;
        }

        }

        /* Transition Content */
        .transition-content {
            position: relative;
            z-index: 10;
            text-align: center;
            padding: 0 30px;
        }

        .transition-heart {
            font-size: clamp(60px, 15vw, 100px);
            margin-bottom: 30px;
            opacity: 0;
            transform: scale(0);
            filter: drop-shadow(0 10px 40px rgba(255, 107, 157, 0.6));
            animation: heartBurst 1.2s cubic-bezier(0.68, -0.55, 0.265, 1.55) 0.5s forwards;
        }

        @@keyframes heartBurst {
            0%

        {
            opacity: 0;
            transform: scale(0) rotate(-180deg);
        }

        60% {
            transform: scale(1.2) rotate(10deg);
        }

        100% {
            opacity: 1;
            transform: scale(1) rotate(0deg);
        }

        }

        .transition-names {
            font-family: 'Playfair Display', serif;
            font-size: clamp(28px, 7vw, 56px);
            font-weight: 800;
            color: #fff;
            line-height: 1.3;
            margin-bottom: 20px;
            opacity: 0;
            transform: translateY(30px);
            text-shadow: 0 4px 20px rgba(255, 107, 157, 0.6), 0 2px 10px rgba(0, 0, 0, 0.2);
            animation: fadeInUpSmooth 1s ease-out 1s forwards;
        }

        .transition-ampersand {
            display: block;
            font-size: clamp(32px, 8vw, 64px);
            margin: 10px 0;
            color: #ffe5ec;
        }

        .transition-subtitle {
            font-size: clamp(16px, 4vw, 22px);
            font-weight: 600;
            color: #fff;
            opacity: 0;
            transform: translateY(20px);
            text-shadow: 0 2px 15px rgba(0, 0, 0, 0.2);
            max-width: 90%;
            margin: 0 auto;
            animation: fadeInUpSmooth 1s ease-out 1.3s forwards;
        }

        @@keyframes fadeInUpSmooth {
            0%

        {
            opacity: 0;
            transform: translateY(30px);
            filter: blur(5px);
        }

        100% {
            opacity: 1;
            transform: translateY(0);
            filter: blur(0);
        }

        }

        /* Sparkles Effect */
        .transition-sparkle {
            position: absolute;
            width: 4px;
            height: 4px;
            background: white;
            border-radius: 50%;
            pointer-events: none;
            opacity: 0;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
            animation: sparkleFloat 2s ease-out forwards;
        }

        @@keyframes sparkleFloat {
            0%

        {
            opacity: 0;
            transform: translateY(0) scale(0);
        }

        20% {
            opacity: 1;
            transform: translateY(-20px) scale(1);
        }

        100% {
            opacity: 0;
            transform: translateY(-200px) scale(0);
        }

        }

        /* Floating Hearts */
        .floating-heart {
            position: absolute;
            font-size: 20px;
            opacity: 0;
            pointer-events: none;
            animation: floatUp 4s ease-out forwards;
        }

        @@keyframes floatUp {
            0%

        {
            opacity: 0;
            transform: translateY(0) rotate(0deg) scale(0);
        }

        10% {
            opacity: 1;
            transform: translateY(-20px) rotate(10deg) scale(1);
        }

        90% {
            opacity: 1;
        }

        100% {
            opacity: 0;
            transform: translateY(-100vh) rotate(360deg) scale(0.5);
        }

        }

        /* Fireworks */
        .firework-particle {
            position: absolute;
            width: 4px;
            height: 4px;
            border-radius: 50%;
            background: white;
            pointer-events: none;
        }

        /* Mobile Optimization */
        @@media (max-width: 768px) {
            .light-ring

        {
            width: 120px;
            height: 120px;
        }

        .floating-heart {
            font-size: 16px;
        }

        }

        @@media (max-width: 480px) {
            .light-ring

        {
            width: 100px;
            height: 100px;
            border-width: 2px;
        }

        .transition-content {
            padding: 0 20px;
        }

        }

        /* ==================== HERO ==================== */
        .hero {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: end;
            position: relative;
            overflow: hidden;
        }

            .hero::before {
                content: '';
                position: fixed; /* Đổi thành fixed */
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: var(--hero-bg-image, url("https://static.vecteezy.com/system/resources/previews/023/956/948/large_2x/elegant-floral-wedding-invitation-card-free-png.png")) center/cover no-repeat;
                opacity: 1;
                z-index: 0;
            }

            .hero::after {
                content: '';
                position: absolute;
                inset: 0;
                background: radial-gradient(circle at 30% 20%, rgba(255, 107, 157, 0.2) 0%, transparent 40%), radial-gradient(circle at 70% 80%, rgba(255, 61, 127, 0.15) 0%, transparent 40%);
                animation: heroFloat 15s ease-in-out infinite;
                z-index: 1;
            }

        .hero-content {
            text-align: center;
            z-index: 10;
            padding: 60px 40px;
            max-width: 95%;
            width: 1000px;
            top: 30px;
            animation: fadeInUp 1.2s cubic-bezier(0.68, -0.55, 0.265, 1.55) backwards;
        }

        .hero-heart {
            font-size: 100px;
            animation: floatHeart 3.5s ease-in-out infinite;
            filter: drop-shadow(0 8px 24px rgba(255, 107, 157, 0.5));
            margin-bottom: 30px;
        }

        .hero-title {
            font-family: 'Dancing Script', cursive;
            font-size: clamp(5rem, 15vw, 10rem);
            font-weight: 800;
            background: linear-gradient(135deg, var(--pink-500), var(--pink-600), var(--pink-500));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            -webkit-text-stroke: 2px rgba(255, 255, 255, 1);
            background-clip: text;
            margin: 0 0 40px;
            line-height: 1.15;
            filter: drop-shadow(0 6px 20px rgba(255, 107, 157, 0.4));
            white-space: nowrap;
        }

            .hero-title span {
                
                display: inline-block;
                font-size: 0.45em;
                margin: 0 30px;
                opacity: 0.95;
                vertical-align: middle;
            }

        .hero-subtitle {
            font-family: 'Playfair Display', serif;
            margin-top: 40px;
            font-size: clamp(22px, 5vw, 32px);
            color: #5a2d5e;
            font-weight: 700;
            opacity: 0.95;
            text-shadow: 0 2px 8px rgba(255, 255, 255, 0.8);
        }

        /* Scroll Indicator */
        .scroll-indicator {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            animation: bounce 2s infinite;
            cursor: pointer;
            z-index: 20;
        }

        @@keyframes bounce {
            0%, 100% {
                transform: translateX(-50%) translateY(0);
            }

            50% {
                transform: translateX(-50%) translateY(-15px);
            }
        }

        /* ==================== SECTIONS ==================== */
        .section {
            padding: 100px 20px;
            opacity: 0;
            transform: translateY(50px);
            transition: all 1s cubic-bezier(0.68, -0.55, 0.265, 1.55);
            position: relative;
        }

            .section.active {
                opacity: 1;
                transform: translateY(0);
            }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .section-title {
            font-size: clamp(36px, 7vw, 52px);
            font-weight: 800;
            text-align: center;
            background: linear-gradient(135deg, var(--pink-400), var(--pink-600));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 70px;
            position: relative;
            filter: drop-shadow(0 2px 8px rgba(255, 107, 157, 0.2));
        }

            .section-title::after {
                content: '';
                position: absolute;
                bottom: -25px;
                left: 50%;
                transform: translateX(-50%);
                width: 120px;
                height: 4px;
                background: linear-gradient(90deg, transparent, var(--pink-400), transparent);
                border-radius: 2px;
            }

        /* ==================== GLASS CARDS ==================== */
        .glass-card {
            background: rgba(255, 255, 255, 0.35);
            backdrop-filter: blur(var(--blur-md));
            border: 2px solid rgba(255, 255, 255, 0.4);
            border-radius: 28px;
            padding: 48px;
            box-shadow: 0 8px 32px 0 rgba(255, 107, 157, 0.15), inset 0 1px 0 0 rgba(255, 255, 255, 0.6);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }

            .glass-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
                transition: left 0.6s ease;
            }

            .glass-card:hover::before {
                left: 100%;
            }

            .glass-card:hover {
                transform: translateY(-8px);
                box-shadow: 0 16px 48px 0 rgba(255, 107, 157, 0.25), inset 0 1px 0 0 rgba(255, 255, 255, 0.7);
                border-color: rgba(255, 255, 255, 0.5);
            }

        /* ==================== INVITATION HEADER ==================== */
        .invitation-header {
            max-width: 720px;
            margin: 0 auto 80px;
            padding: 80px 48px;
            text-align: center;
            backdrop-filter: blur(var(--blur-lg));
            border-radius: 30px;
            border: 2px solid rgba(255, 255, 255, 0.5);
        }

        .invitation-envelope {
            font-size: 56px;
            filter: drop-shadow(0 8px 24px rgba(255, 107, 157, 0.3));
            animation: floatHeart 3.5s ease-in-out infinite;
            margin-bottom: 30px;
        }

        .invite-main {
            font-family: 'Dancing Script', cursive;
            font-size: clamp(30px, 5.5vw, 46px);
            color: #7a3f7d;
            font-weight: 400;
            margin: 30px 0 24px 0;
        }

        .guest-name {
            font-family: 'Dancing Script', cursive;
            font-size: clamp(56px, 13vw, 96px);
            background: linear-gradient(135deg, var(--pink-400), var(--pink-600));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 400;
            margin: 16px 0 32px;
            filter: drop-shadow(0 4px 16px rgba(255, 107, 157, 0.3));
        }

        .stars-line {
            font-size: 32px;
            margin: 16px 0;
            opacity: 0.8;
        }

        .final-line {
            font-family: 'Playfair Display', serif;
            font-size: clamp(22px, 4.5vw, 30px);
            color: #7a3f7d;
            font-weight: 300;
            line-height: 1.6;
            margin: 36px auto 0;
            max-width: 560px;
        }

        /* ==================== WEDDING INFO ==================== */
        /* ==================== WEDDING INFO ==================== */
        .wedding-info {
            margin-top: 48px;
            padding: 50px 40px;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.5) 0%, rgba(255, 245, 250, 0.4) 100%);
            backdrop-filter: blur(var(--blur-md));
            border: 2px solid rgba(255, 255, 255, 0.5);
            border-radius: 28px;
            box-shadow: 0 12px 40px rgba(255, 107, 157, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.7), inset 0 -1px 0 rgba(255, 107, 157, 0.1);
            text-align: center;
            transition: all 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
            position: relative;
            overflow: hidden;
        }

            .wedding-info::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
                transition: left 0.7s ease;
            }

            .wedding-info:hover::before {
                left: 100%;
            }

            .wedding-info:hover {
                transform: translateY(-8px) scale(1.02);
                box-shadow: 0 20px 60px rgba(255, 107, 157, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.8), inset 0 -1px 0 rgba(255, 107, 157, 0.15);
                border-color: rgba(255, 255, 255, 0.6);
            }

        .info-title {
            font-size: 1.75rem;
            font-weight: 800;
            margin-bottom: 32px;
            background: linear-gradient(135deg, var(--pink-500), var(--pink-600), var(--pink-500));
            background-size: 200% auto;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            animation: gradientShift 3s ease infinite;
            filter: drop-shadow(0 2px 8px rgba(255, 107, 157, 0.2));
            position: relative;
            z-index: 1;
        }

        .info-content {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 28px;
            flex-wrap: wrap;
            position: relative;
            z-index: 1;
        }

        .info-item {
            display: flex;
            align-items: center;
            gap: 12px;
            font-size: 1.25rem;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.7) 0%, rgba(255, 250, 252, 0.6) 100%);
            backdrop-filter: blur(15px);
            padding: 18px 32px;
            border-radius: 20px;
            border: 1.5px solid rgba(255, 255, 255, 0.7);
            box-shadow: 0 6px 20px rgba(255, 107, 157, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.9);
            color: #5a2d5e;
            font-weight: 700;
            transition: all 0.3s ease;
            position: relative;
        }

            .info-item::before {
                content: '';
                position: absolute;
                inset: 0;
                border-radius: 20px;
                background: linear-gradient(135deg, rgba(255, 107, 157, 0.1), transparent);
                opacity: 0;
                transition: opacity 0.3s ease;
            }

            .info-item:hover {
                transform: translateY(-4px) scale(1.05);
                box-shadow: 0 10px 30px rgba(255, 107, 157, 0.25), inset 0 1px 0 rgba(255, 255, 255, 1);
                border-color: rgba(255, 255, 255, 0.9);
            }

                .info-item:hover::before {
                    opacity: 1;
                }

            .info-item .icon {
                font-size: 1.8em;
                filter: drop-shadow(0 2px 6px rgba(255, 107, 157, 0.3));
                animation: iconPulse 2s ease-in-out infinite;
            }

            .info-item .text {
                letter-spacing: 0.5px;
                text-shadow: 0 1px 3px rgba(255, 255, 255, 0.8);
            }

        .info-divider {
            width: 2px;
            height: 40px;
            background: linear-gradient(180deg, transparent, var(--pink-400), transparent);
            border-radius: 2px;
            opacity: 0.6;
            animation: dividerGlow 2s ease-in-out infinite;
        }

        @@keyframes iconPulse {
            0%, 100%

        {
            transform: scale(1);
        }

        50% {
            transform: scale(1.1);
        }

        }

        @@keyframes dividerGlow {
            0%, 100%

        {
            opacity: 0.4;
            box-shadow: 0 0 8px rgba(255, 107, 157, 0.3);
        }

        50% {
            opacity: 0.8;
            box-shadow: 0 0 16px rgba(255, 107, 157, 0.5);
        }

        }

        /* Responsive cho Wedding Info */
        @@media (max-width: 480px) {
            .wedding-info

        {
            padding: 36px 24px;
            margin-top: 32px;
        }

        .info-title {
            font-size: 1.4rem;
            margin-bottom: 24px;
        }

        .info-content {
            gap: 16px;
        }

        .info-item {
            font-size: 1.05rem;
            padding: 14px 24px;
            gap: 10px;
        }

            .info-item .icon {
                font-size: 1.5em;
            }

        .info-divider {
            height: 32px;
        }

        }

        /* ==================== COUNTDOWN ==================== */
        .countdown-container {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 24px;
            max-width: 700px;
            margin: 0 auto;
            padding: 0 12px;
        }

        .count-item {
            padding: 40px 20px;
            text-align: center;
            background: rgba(255, 255, 255, 0.3);
            backdrop-filter: blur(var(--blur-md));
            border: 2px solid rgba(255, 255, 255, 0.4);
            border-radius: 24px;
            box-shadow: 0 8px 32px 0 rgba(255, 107, 157, 0.15), inset 0 1px 0 0 rgba(255, 255, 255, 0.6);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }

            .count-item::before {
                content: '';
                position: absolute;
                inset: 0;
                background: linear-gradient(135deg, rgba(255, 107, 157, 0.1) 0%, transparent 50%);
                opacity: 0;
                transition: opacity 0.4s ease;
            }

            .count-item:hover::before {
                opacity: 1;
            }

            .count-item:hover {
                transform: translateY(-8px) scale(1.02);
                box-shadow: 0 16px 48px 0 rgba(255, 107, 157, 0.25), inset 0 1px 0 0 rgba(255, 255, 255, 0.7);
                border-color: rgba(255, 255, 255, 0.5);
            }

        .count-number {
            display: block;
            font-size: 56px;
            font-weight: 900;
            background: linear-gradient(135deg, var(--pink-400), var(--pink-600));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 12px;
            transition: transform 0.2s ease;
            filter: drop-shadow(0 2px 8px rgba(255, 107, 157, 0.2));
        }

            .count-number.change {
                transform: scale(1.15);
            }

        .count-label {
            font-size: 15px;
            font-weight: 700;
            color: #5a2d5e;
            text-transform: uppercase;
            letter-spacing: 1.5px;
        }

        /* ==================== TIMELINE ==================== */
        .timeline-wrapper {
            position: relative;
            max-width: 900px;
            margin: 0 auto;
        }

        .timeline-line {
            position: absolute;
            top: 0;
            bottom: 0;
            left: 50%;
            width: 4px;
            background: linear-gradient(180deg, transparent 0%, var(--pink-300) 10%, var(--pink-400) 50%, var(--pink-300) 90%, transparent 100% );
            border-radius: 2px;
            box-shadow: 0 0 20px rgba(255, 107, 157, 0.3);
        }

        .timeline-content {
            margin: 0 28px;
            max-width: 480px;
            padding: 44px;
            background: rgba(255, 255, 255, 0.3);
            backdrop-filter: blur(var(--blur-md));
            border: 2px solid rgba(255, 255, 255, 0.4);
            border-radius: 28px;
            box-shadow: 0 8px 32px 0 rgba(255, 107, 157, 0.15), inset 0 1px 0 0 rgba(255, 255, 255, 0.6);
            position: relative;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            margin-bottom: 40px;
        }

            .timeline-content:hover {
                transform: translateY(-8px);
                box-shadow: 0 16px 48px 0 rgba(255, 107, 157, 0.25), inset 0 1px 0 0 rgba(255, 255, 255, 0.7);
            }

            .timeline-content::before {
                content: '';
                position: absolute;
                width: 28px;
                height: 28px;
                background: linear-gradient(135deg, var(--pink-400), var(--pink-500));
                border: 4px solid rgba(255, 255, 255, 0.8);
                border-radius: 50%;
                top: 50px;
                box-shadow: 0 0 0 6px rgba(255, 107, 157, 0.2), 0 4px 12px rgba(255, 107, 157, 0.3);
                transition: all 0.4s ease;
            }

            .timeline-content:hover::before {
                transform: scale(1.2);
                box-shadow: 0 0 0 10px rgba(255, 107, 157, 0.25), 0 6px 16px rgba(255, 107, 157, 0.4);
            }

        .timeline-time {
            font-size: 20px;
            font-weight: 700;
            background: linear-gradient(135deg, var(--pink-500), var(--pink-600));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 18px;
            display: flex;
            align-items: center;
            gap: 14px;
        }

        .timeline-title {
            font-size: 28px;
            font-weight: 800;
            color: #2d1b2e;
            margin-bottom: 18px;
        }

        .timeline-desc {
            font-size: 18px;
            color: #5a2d5e;
            line-height: 1.8;
        }

        /* ==================== RSVP & DRESSCODE ==================== */
        .rsvp-buttons {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            gap: 36px;
        }

        .rsvp-btn {
            padding: 52px 40px;
            cursor: pointer;
            text-align: center;
            background: rgba(255, 255, 255, 0.3);
            backdrop-filter: blur(var(--blur-md));
            border: 2px solid rgba(255, 255, 255, 0.4);
            border-radius: 28px;
            box-shadow: 0 8px 32px 0 rgba(255, 107, 157, 0.15), inset 0 1px 0 0 rgba(255, 255, 255, 0.6);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }

            .rsvp-btn::before {
                content: '';
                position: absolute;
                inset: 0;
                background: linear-gradient(135deg, rgba(255, 107, 157, 0.15) 0%, transparent 50%);
                opacity: 0;
                transition: opacity 0.4s ease;
            }

            .rsvp-btn:hover::before {
                opacity: 1;
            }

            .rsvp-btn:hover {
                transform: translateY(-10px) scale(1.02);
                box-shadow: 0 20px 60px 0 rgba(255, 107, 157, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.8);
                border-color: rgba(255, 255, 255, 0.6);
            }

        .rsvp-icon {
            font-size: 80px;
            margin-bottom: 28px;
            filter: drop-shadow(0 8px 20px rgba(255, 107, 157, 0.3));
            transition: transform 0.4s ease;
        }

        .rsvp-btn:hover .rsvp-icon {
            transform: scale(1.1) rotate(5deg);
        }

        .rsvp-text {
            font-size: 26px;
            font-weight: 700;
            color: #2d1b2e;
        }

        /* ==================== STORIES ==================== */
        .stories-grid {
            display: grid;
            gap: 60px;
            max-width: 1000px;
            margin: 0 auto;
        }

        .story-card {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 50px;
            padding: 52px;
            align-items: center;
            background: rgba(255, 255, 255, 0.3);
            backdrop-filter: blur(var(--blur-lg));
            border: 2px solid rgba(255, 255, 255, 0.4);
            border-radius: 32px;
            box-shadow: 0 16px 64px 0 rgba(255, 107, 157, 0.2), inset 0 1px 0 0 rgba(255, 255, 255, 0.6);
            transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        }

            .story-card:hover {
                transform: translateY(-12px);
                box-shadow: 0 24px 80px 0 rgba(255, 107, 157, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.8);
            }

        .story-image {
            width: 100%;
            height: 360px;
            object-fit: cover;
            border-radius: 24px;
            border: 2px solid rgba(255, 255, 255, 0.5);
            box-shadow: 0 12px 40px rgba(255, 107, 157, 0.2);
            transition: all 0.4s ease;
        }

        .story-card:hover .story-image {
            transform: scale(1.05);
            box-shadow: 0 16px 56px rgba(255, 107, 157, 0.3);
        }

        .story-icon {
            font-size: 48px;
            margin-bottom: 20px;
            filter: drop-shadow(0 4px 12px rgba(255, 107, 157, 0.3));
        }

        .story-title {
            font-size: 32px;
            font-weight: 800;
            background: linear-gradient(135deg, var(--pink-400), var(--pink-600));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 20px;
        }

        .story-text {
            font-size: 18px;
            color: #5a2d5e;
            line-height: 1.8;
        }

        /* ==================== GALLERY ==================== */
        .gallery-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            gap: 32px;
        }

        .gallery-item {
            position: relative;
            aspect-ratio: 1;
            overflow: hidden;
            border-radius: 24px;
            border: 2px solid rgba(255, 255, 255, 0.4);
            box-shadow: 0 8px 32px rgba(255, 107, 157, 0.15);
            transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
            background: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
        }

            .gallery-item::before {
                content: '';
                position: absolute;
                inset: 0;
                background: linear-gradient(135deg, rgba(255, 107, 157, 0.2), rgba(255, 61, 127, 0.15));
                opacity: 0;
                transition: opacity 0.4s ease;
                z-index: 2;
                backdrop-filter: blur(8px);
            }

            .gallery-item:hover::before {
                opacity: 1;
            }

            .gallery-item::after {
                content: '✨';
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                font-size: 56px;
                opacity: 0;
                transition: all 0.4s ease;
                z-index: 3;
            }

            .gallery-item:hover::after {
                opacity: 1;
                animation: heartFloat 2s ease-in-out infinite;
            }

            .gallery-item img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: all 0.5s ease;
            }

            .gallery-item:hover {
                transform: translateY(-12px) scale(1.03);
                box-shadow: 0 20px 60px rgba(255, 107, 157, 0.3);
                border-color: rgba(255, 255, 255, 0.6);
            }

                .gallery-item:hover img {
                    transform: scale(1.1);
                    filter: brightness(1.1);
                }

        /* ==================== LOCATION ==================== */
        .location-main {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 50px;
            align-items: center;
        }

        .location-info {
            padding: 40px;
            background: rgba(255, 255, 255, 0.3);
            backdrop-filter: blur(var(--blur-md));
            border: 2px solid rgba(255, 255, 255, 0.4);
            border-radius: 28px;
            box-shadow: 0 8px 32px 0 rgba(255, 107, 157, 0.15), inset 0 1px 0 0 rgba(255, 255, 255, 0.6);
        }

            .location-info h3 {
                font-size: 36px;
                font-weight: 800;
                background: linear-gradient(135deg, var(--pink-400), var(--pink-600));
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
                margin-bottom: 24px;
            }

            .location-info p {
                font-size: 20px;
                color: #5a2d5e;
                line-height: 1.8;
                margin-bottom: 32px;
            }

        .location-btn {
            display: inline-flex;
            align-items: center;
            gap: 14px;
            padding: 20px 40px;
            background: linear-gradient(135deg, var(--pink-400), var(--pink-500));
            color: #fff;
            text-decoration: none;
            border-radius: 16px;
            font-size: 20px;
            font-weight: 700;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 8px 24px rgba(255, 107, 157, 0.3);
            border: 2px solid rgba(255, 255, 255, 0.3);
        }

            .location-btn:hover {
                transform: translateY(-6px) scale(1.03);
                box-shadow: 0 16px 48px rgba(255, 107, 157, 0.5);
                background: linear-gradient(135deg, var(--pink-500), var(--pink-600));
            }

        .location-map {
            border-radius: 28px;
            overflow: hidden;
            border: 2px solid rgba(255, 255, 255, 0.4);
            box-shadow: 0 16px 64px rgba(255, 107, 157, 0.2);
            transition: all 0.4s ease;
        }

            .location-map:hover {
                transform: translateY(-8px);
                box-shadow: 0 24px 80px rgba(255, 107, 157, 0.3);
            }

        /* ==================== CONTACTS ==================== */
        .contacts-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(360px, 1fr));
            gap: 44px;
        }

        .contact-card {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 56px 32px;
            gap: 24px;
            background: rgba(255, 255, 255, 0.3);
            backdrop-filter: blur(var(--blur-lg));
            border: 2px solid rgba(255, 255, 255, 0.4);
            border-radius: 32px;
            box-shadow: 0 16px 64px 0 rgba(255, 107, 157, 0.2), inset 0 1px 0 0 rgba(255, 255, 255, 0.6);
            transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        }

            .contact-card:hover {
                transform: translateY(-12px);
                box-shadow: 0 24px 80px 0 rgba(255, 107, 157, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.8);
            }

        .contact-avatar {
            width: 100px;
            height: 100px;
            font-size: 52px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(255, 255, 255, 0.4);
            backdrop-filter: blur(15px);
            border: 3px solid rgba(255, 255, 255, 0.6);
            border-radius: 50%;
            box-shadow: 0 12px 40px rgba(255, 107, 157, 0.25), inset 0 1px 0 rgba(255, 255, 255, 0.8);
        }

        .contact-name {
            font-size: 30px;
            font-weight: 800;
            color: #2d1b2e;
        }

        .contact-phone {
            display: block;
            font-size: 24px;
            font-weight: 700;
            color: var(--pink-500);
            text-decoration: none;
            padding: 18px 36px;
            border-radius: 16px;
            background: rgba(255, 107, 157, 0.1);
            backdrop-filter: blur(10px);
            border: 2px solid rgba(255, 107, 157, 0.2);
            transition: all 0.3s ease;
        }

            .contact-phone:hover {
                background: rgba(255, 107, 157, 0.2);
                transform: translateY(-4px);
                box-shadow: 0 8px 24px rgba(255, 107, 157, 0.3);
                border-color: rgba(255, 107, 157, 0.4);
            }

        .qr-toggle-btn {
            padding: 18px 40px;
            background: rgba(255, 255, 255, 0.4);
            backdrop-filter: blur(15px);
            color: var(--pink-600);
            border: 2px solid rgba(255, 255, 255, 0.5);
            border-radius: 16px;
            font-size: 18px;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 4px 16px rgba(255, 107, 157, 0.15);
        }

            .qr-toggle-btn:hover {
                background: rgba(255, 107, 157, 0.2);
                transform: translateY(-6px) scale(1.03);
                box-shadow: 0 12px 40px rgba(255, 107, 157, 0.3);
                border-color: rgba(255, 107, 157, 0.4);
            }

        /* ==================== QR MODAL ==================== */
        .qr-modal-overlay {
            position: fixed;
            inset: 0;
            z-index: 10001;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            background: rgba(45, 27, 46, 0.8);
            backdrop-filter: blur(40px);
            opacity: 0;
            visibility: hidden;
            transition: all 0.4s ease;
        }

            .qr-modal-overlay.active {
                opacity: 1;
                visibility: visible;
            }

        .qr-modal-container {
            width: 100%;
            max-width: 450px;
            background: rgba(255, 255, 255, 0.4);
            backdrop-filter: blur(var(--blur-lg));
            border: 2px solid rgba(255, 255, 255, 0.5);
            border-radius: 40px;
            overflow: hidden;
            transform: scale(0.85);
            transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
            box-shadow: 0 32px 96px rgba(255, 107, 157, 0.4);
            position: relative;
        }

        .qr-modal-overlay.active .qr-modal-container {
            transform: scale(1);
        }

        .qr-modal-body {
            padding: 70px 48px;
            text-align: center;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 32px;
        }

        .qr-title {
            font-size: 36px;
            font-weight: 900;
            background: linear-gradient(135deg, var(--pink-500), var(--pink-600));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .qr-code-container {
            width: 300px;
            height: 300px;
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(20px);
            border: 3px solid rgba(255, 255, 255, 0.6);
            border-radius: 28px;
            padding: 28px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 16px 48px rgba(255, 107, 157, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.8);
        }

            .qr-code-container img {
                width: 100%;
                height: 100%;
                object-fit: contain;
                border-radius: 16px;
            }

        .qr-instruction {
            font-size: 20px;
            color: #5a2d5e;
            line-height: 1.7;
            font-weight: 600;
        }

        .qr-close {
            position: absolute;
            top: 24px;
            right: 24px;
            width: 60px;
            height: 60px;
            background: rgba(255, 255, 255, 0.4);
            backdrop-filter: blur(20px);
            border: 2px solid rgba(255, 255, 255, 0.6);
            border-radius: 50%;
            color: var(--pink-600);
            font-size: 28px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 16px rgba(255, 107, 157, 0.2);
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .qr-close:hover {
                background: rgba(255, 107, 157, 0.3);
                transform: scale(1.15) rotate(90deg);
                box-shadow: 0 8px 32px rgba(255, 107, 157, 0.4);
            }

        /* ==================== WISHES FORM ==================== */
        .wishes-container {
            max-width: 1000px;
            margin: 0 auto;
        }

        .wishes-subtitle {
            font-size: 22px;
            color: #5a2d5e;
            text-align: center;
            margin-bottom: 40px;
            font-weight: 600;
        }

        .wish-form-card {
            padding: 64px 52px;
            max-width: 740px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.35);
            backdrop-filter: blur(var(--blur-lg));
            border: 2px solid rgba(255, 255, 255, 0.4);
            border-radius: 32px;
            box-shadow: 0 16px 64px 0 rgba(255, 107, 157, 0.2), inset 0 1px 0 0 rgba(255, 255, 255, 0.6);
        }

        .form-group {
            margin-bottom: 36px;
            text-align: left;
        }

            .form-group label {
                display: block;
                font-size: 20px;
                font-weight: 700;
                color: #2d1b2e;
                margin-bottom: 18px;
            }

                .form-group label span {
                    color: var(--pink-500);
                }

            .form-group input,
            .form-group textarea {
                width: 100%;
                padding: 20px 28px;
                border: 2px solid rgba(255, 255, 255, 0.5);
                border-radius: 16px;
                font-size: 18px;
                font-family: inherit;
                background: rgba(255, 255, 255, 0.5);
                backdrop-filter: blur(10px);
                color: #2d1b2e;
                transition: all 0.3s ease;
                box-shadow: 0 4px 12px rgba(255, 107, 157, 0.1);
            }

                .form-group input:focus,
                .form-group textarea:focus {
                    outline: none;
                    border-color: var(--pink-400);
                    background: rgba(255, 255, 255, 0.7);
                    box-shadow: 0 0 0 4px rgba(255, 107, 157, 0.15), 0 8px 24px rgba(255, 107, 157, 0.2);
                    transform: translateY(-2px);
                }

            .form-group textarea {
                resize: vertical;
                min-height: 160px;
            }

        .wish-submit-btn {
            width: 100%;
            padding: 24px 40px;
            background: linear-gradient(135deg, var(--pink-400), var(--pink-500));
            color: #fff;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 16px;
            font-size: 22px;
            font-weight: 700;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 14px;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 12px 40px rgba(255, 107, 157, 0.3);
        }

            .wish-submit-btn:hover {
                transform: translateY(-6px) scale(1.02);
                box-shadow: 0 20px 60px rgba(255, 107, 157, 0.5);
                background: linear-gradient(135deg, var(--pink-500), var(--pink-600));
            }

            .wish-submit-btn:disabled {
                opacity: 0.6;
                cursor: not-allowed;
                transform: none;
            }

        /* ==================== MUSIC CONTROL ==================== */
        .music-control {
            position: fixed;
            bottom: 40px;
            right: 40px;
            width: 72px;
            height: 72px;
            background: rgba(255, 255, 255, 0.4);
            backdrop-filter: blur(var(--blur-md));
            border: 2px solid rgba(255, 255, 255, 0.5);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            z-index: 1000;
            box-shadow: 0 12px 40px rgba(255, 107, 157, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.6);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }

            .music-control:hover {
                transform: scale(1.15);
                box-shadow: 0 16px 56px rgba(255, 107, 157, 0.5), inset 0 1px 0 rgba(255, 255, 255, 0.8);
                background: rgba(255, 107, 157, 0.3);
            }

            .music-control i {
                color: var(--pink-600);
                font-size: 28px;
            }

        /* ==================== FOOTER ==================== */
        .footer {
            padding: 100px 20px;
            background: rgba(255, 255, 255, 0.25);
            backdrop-filter: blur(var(--blur-lg));
            border-top: 2px solid rgba(255, 255, 255, 0.4);
            text-align: center;
            position: relative;
        }

            .footer::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 2px;
                background: linear-gradient(90deg, transparent, var(--pink-400), transparent);
            }

        .footer-heart-big {
            font-size: 72px;
            margin-bottom: 32px;
            filter: drop-shadow(0 8px 24px rgba(255, 107, 157, 0.4));
        }

        .footer-names {
            font-size: 42px;
            font-weight: 800;
            background: linear-gradient(135deg, var(--pink-400), var(--pink-600));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 20px;
        }

            .footer-names span:nth-child(2) {
                font-size: 0.6em;
            }

        .footer-date {
            font-size: 24px;
            font-weight: 700;
            color: #5a2d5e;
            margin-bottom: 36px;
        }

        .footer-message {
            font-size: 18px;
            color: #5a2d5e;
            line-height: 1.8;
            margin-bottom: 40px;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }

        .share-btn {
            display: inline-flex;
            align-items: center;
            gap: 12px;
            padding: 20px 40px;
            background: linear-gradient(135deg, var(--pink-400), var(--pink-500));
            color: #fff;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 16px;
            font-size: 18px;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 8px 32px rgba(255, 107, 157, 0.3);
        }

            .share-btn:hover {
                transform: translateY(-6px) scale(1.03);
                box-shadow: 0 16px 48px rgba(255, 107, 157, 0.5);
                background: linear-gradient(135deg, var(--pink-500), var(--pink-600));
            }

        /* ==================== MODAL ==================== */
        .modal-overlay {
            position: fixed;
            inset: 0;
            z-index: 10002;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            background: rgba(45, 27, 46, 0.8);
            backdrop-filter: blur(40px);
            opacity: 0;
            visibility: hidden;
            transition: all 0.4s ease;
        }

            .modal-overlay.active {
                opacity: 1;
                visibility: visible;
            }

        .modal {
            width: 100%;
            max-width: 480px;
            background: rgba(255, 255, 255, 0.4);
            backdrop-filter: blur(var(--blur-lg));
            border: 2px solid rgba(255, 255, 255, 0.5);
            border-radius: 32px;
            padding: 64px 44px;
            text-align: center;
            box-shadow: 0 32px 96px rgba(255, 107, 157, 0.4);
            transform: scale(0.85);
            transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        }

        .modal-overlay.active .modal {
            transform: scale(1);
        }

        .modal-icon {
            font-size: 72px;
            margin-bottom: 28px;
            filter: drop-shadow(0 8px 24px rgba(255, 107, 157, 0.3));
        }

        .modal h3 {
            font-size: 32px;
            font-weight: 800;
            color: #2d1b2e;
            margin-bottom: 20px;
        }

        .modal p {
            font-size: 18px;
            color: #5a2d5e;
            line-height: 1.8;
            margin-bottom: 36px;
        }

        .modal-close-btn {
            padding: 20px 44px;
            background: linear-gradient(135deg, var(--pink-400), var(--pink-500));
            color: #fff;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 16px;
            font-size: 18px;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 8px 32px rgba(255, 107, 157, 0.3);
        }

            .modal-close-btn:hover {
                transform: translateY(-4px) scale(1.03);
                box-shadow: 0 16px 48px rgba(255, 107, 157, 0.5);
                background: linear-gradient(135deg, var(--pink-500), var(--pink-600));
            }

        /* ==================== ANIMATIONS ==================== */
        @@keyframes gradientShift {
            0%, 100%

        {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        }

        @@keyframes envelopeFloat {
            0%, 100%

        {
            transform: translateY(0) rotateX(0deg);
        }

        50% {
            transform: translateY(-20px) rotateX(2deg);
        }

        }

        @@keyframes envelopeOpen {
            0%

        {
            transform: translateY(0) rotateX(0deg) scale(1);
            opacity: 1;
        }

        100% {
            transform: translateY(-200px) rotateX(-100deg) scale(0.7);
            opacity: 0;
        }

        }

        @@keyframes heartPop {
            0%

        {
            opacity: 0;
            transform: translateX(-50%) scale(0) rotate(-30deg);
        }

        70% {
            transform: translateX(-50%) scale(1.2) rotate(10deg);
        }

        100% {
            opacity: 1;
            transform: translateX(-50%) scale(1) rotate(0deg);
        }

        }

        @@keyframes fadeInUpCard {
            0%

        {
            opacity: 0;
            transform: translateX(-50%) translateY(40px);
        }

        100% {
            opacity: 1;
            transform: translateX(-50%) translateY(0);
        }

        }

        @@keyframes fadeInUp {
            from

        {
            opacity: 0;
            transform: translateY(50px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        @@keyframes floatHeart {
            0%, 100%

        {
            transform: translateY(0) rotate(-3deg);
        }

        50% {
            transform: translateY(-20px) rotate(3deg);
        }

        }

        @@keyframes heroFloat {
            0%, 100%

        {
            opacity: 0.6;
            transform: scale(1) rotate(0deg);
        }

        50% {
            opacity: 0.9;
            transform: scale(1.1) rotate(5deg);
        }

        }

        @@keyframes heartFloat {
            0%, 100%

        {
            transform: translate(-50%, -50%) translateY(0);
        }

        50% {
            transform: translate(-50%, -50%) translateY(-15px);
        }

        }

        /* ==================== RESPONSIVE ==================== */
        @@media (min-width: 769px) {
            .timeline-content:nth-child(odd)

        {
            margin-right: 28px;
            margin-left: auto;
        }

        .timeline-content:nth-child(even) {
            margin-left: 28px;
            margin-right: auto;
        }

        .timeline-content:nth-child(odd)::before {
            left: -66px;
        }

        .timeline-content:nth-child(even)::before {
            right: -66px;
        }

        }

        @@media (max-width: 768px) {
            .section

        {
            padding: 80px 20px;
        }

            .hero::before {
                position: absolute;
                background-attachment: scroll;
                /* Đảm bảo ảnh cover đúng */
                background-size: cover;
                background-position: center center;
                width: 100%;
                height: 100%;
                transform: none;
            }

        .story-card, .location-main {
            grid-template-columns: 1fr;
            gap: 36px;
        }

        .countdown-container {
            gap: 12px;
            grid-template-columns: repeat(4, 1fr);
        }

        .count-item {
            padding: 28px 12px;
        }

        .count-number {
            font-size: 42px;
        }

        .timeline-line {
            left: 0;
        }

        .timeline-content {
            margin-left: 68px;
            margin-right: 28px;
        }

            .timeline-content::before {
                left: -66px;
            }

        }

        @@media (max-width: 480px) {
            .section

        {
            padding: 60px 16px;
        }

        .hero-content {
            padding: 60px 24px;
        }

        .hero-title {
            font-size: 70px;
        }

        .section-title {
            font-size: 36px;
        }

        .countdown-container {
            gap: 8px;
            padding: 0 8px;
        }

        .count-item {
            padding: 16px 8px;
        }

        .count-number {
            font-size: 32px;
        }

        .count-label {
            font-size: 11px;
        }

        .gallery-grid {
            gap: 12px;
            grid-template-columns: repeat(2, 1fr);
        }

        .glass-card {
            padding: 32px 24px;
        }

        .wish-form-card {
            padding: 48px 28px;
        }

        .invitation-header {
            padding: 60px 32px;
            border: hidden;
        }

            .story-card{
                padding: 24px;
            }
        

        }


        /* ==================== ALBUM MODAL - LIQUID GLASS ==================== */
        /* Album Modal */
        .album-modal {
            position: fixed;
            inset: 0;
            background: rgba(0, 0, 0, 0.9);
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            justify-content: center;
            visibility: hidden;
            opacity: 0;
            z-index: 10000;
            transition: opacity 0.35s ease, visibility 0.35s ease;
        }

            .album-modal.active {
                visibility: visible;
                opacity: 1;
            }

        .album-content {
            position: relative;
            width: 90%;
            max-width: 900px;
            aspect-ratio: 4 / 3;
            background: #111;
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0,0,0,0.4);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .album-slide {
            width: 100%;
            height: 100%;
            object-fit: contain;
            border-radius: 16px;
            animation: fadeInSlide 0.5s ease;
        }

        @@keyframes fadeInSlide {
            from {
                opacity: 0;
                transform: scale(0.97);
            }

            to {
                opacity: 1;
                transform: scale(1);
            }
        }

        .album-nav {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(255, 255, 255, 0.25);
            border: none;
            color: var(--white);
            font-size: 2rem;
            cursor: pointer;
            border-radius: 50%;
            width: 55px;
            height: 55px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            z-index: 10;
        }

            .album-nav:hover {
                background: rgba(255, 255, 255, 0.45);
                transform: translateY(-50%) scale(1.1);
            }

            .album-nav.prev {
                left: 20px;
            }

            .album-nav.next {
                right: 20px;
            }

        .album-close {
            position: absolute;
            top: 20px;
            right: 20px;
            background: rgba(255, 255, 255, 0.25);
            border: none;
            color: var(--white);
            font-size: 1.8rem;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            z-index: 10;
        }

            .album-close:hover {
                background: rgba(255, 255, 255, 0.5);
                transform: rotate(90deg);
            }

        .album-counter {
            position: absolute;
            bottom: 20px;
            right: 30px;
            color: var(--white);
            font-size: 1rem;
            font-weight: 600;
            background: rgba(0,0,0,0.4);
            padding: 6px 14px;
            border-radius: 12px;
            letter-spacing: 1px;
        }
        
    </style>


</head>
<body>
    <!-- LOADING SCREEN -->
    <!-- TRANSITION SCREEN (LOADING) -->
    <div class="transition-screen" id="transitionScreen">
        <div class="light-rings-container">
            <div class="light-ring"></div>
            <div class="light-ring"></div>
            <div class="light-ring"></div>
            <div class="light-ring"></div>
            <div class="light-ring"></div>
        </div>
        <div class="transition-content">
            <div class="transition-heart">💖</div>
            <div class="transition-names" id="transitionNames">
                <b id="transitionGroom">Chú rể</b>
                <span class="transition-ampersand">&</span>
                <b id="transitionBride">Cô dâu</b>
            </div>
            <div class="transition-subtitle">Trân trọng mời bạn đến với ngày trọng đại của chúng tôi</div>
        </div>
    </div>

    <!-- MUSIC PLAYER -->
    <audio id="bgMusic" loop>
        <source id="musicSource" src="" type="audio/mpeg">
    </audio>
    <div class="music-control" id="musicControl">
        <i class="fas fa-play"></i>
    </div>

    <!-- HERO -->
    <section class="hero" id="heroSection">
        <div class="hero-content">
            <div class="hero-heart"></div>
            <h1 class="hero-title" id="heroNames"><b>Chú Rể</b><br>&</br><b>Cô Dâu</b></h1>
            <p class="hero-subtitle" id="heroSubtitle">Chúng tôi sắp về chung một nhà!</p>
        </div>
        <div class="scroll-indicator" onclick="document.getElementById('invitation').scrollIntoView()">
            <svg width="40" height="40" viewBox="0 0 24 24" fill="white" style="filter: drop-shadow(0 2px 4px rgba(0,0,0,0.3));">
                <path d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z" />
            </svg>
        </div>
    </section>

    <!-- INVITATION -->
    <section class="section">
        <div class="container">
            <div class="invitation-header">
                <div class="invitation-envelope">💌</div>
                <p class="invite-main">Trân trọng kính mời</p>
                <h2 id="guestNameDisplay" class="guest-name">Quý khách</h2>
                <div class="stars-line">✨✨</div>
                <p class="final-line">Đến dự chung vui cùng gia đình<br>trong ngày trọng đại của đôi mình</p>
            </div>
        </div>
    </section>

    <!-- TIME INFO -->
    <section class="section">
        <div class="container">
            <h2 class="section-title">Thời Gian</h2>
            <div class="wedding-info">
                <div class="info-title">Ngày & Giờ Tổ Chức</div>
                <div class="info-content" id="weddingTimeInfo">
                    <!-- Nội dung sẽ được render bởi JavaScript -->
                </div>
            </div>
        </div>
    </section>

    <!-- LOCATION -->
    <section class="section">
        <div class="container">
            <h2 class="section-title">📍 Địa Điểm</h2>
            <div id="locationWrapper"></div>
        </div>
    </section>

    <!-- COUNTDOWN -->
    <section class="section">
        <div class="container">
            <h2 class="section-title">⏰ Còn Lại</h2>
            <div class="countdown-container" id="countdownContainer"></div>
        </div>
    </section>

    <!-- TIMELINE -->
    <section class="section">
        <div class="container">
            <h2 class="section-title">📅 Lịch Trình</h2>
            <div class="timeline-wrapper" id="timelineWrapper"></div>
        </div>
    </section>

    <!-- STORIES -->
    <section class="section">
        <div class="container">
            <h2 class="section-title">💕 Câu Chuyện Tình Yêu</h2>
            <div class="stories-grid" id="storiesGrid"></div>
        </div>
    </section>

    <!-- GALLERY -->
    <section class="section">
        <div class="container">
            <h2 class="section-title">📸 Khoảnh Khắc</h2>
            <div class="gallery-grid" id="galleryGrid"></div>
        </div>
    </section>
    <!-- Album Modal -->
    <div id="albumModal" class="album-modal">
        <div class="album-content">
            <button class="album-close" onclick="closeAlbum()" title="Đóng (ESC)">&times;</button>
            <button class="album-nav prev" onclick="changeSlide(-1)" title="Trước">&#10094;</button>
            <img id="albumSlide" class="album-slide" src="" alt="Wedding photo" />
            <button class="album-nav next" onclick="changeSlide(1)" title="Sau">&#10095;</button>
            <div id="albumCounter" class="album-counter"></div>
        </div>
    </div>


    <!-- WISHES -->
    <section class="section">
        <div class="container">
            <h2 class="section-title">💌 Gửi Lời Chúc</h2>
            <div class="wishes-container">
                <p class="wishes-subtitle">Những lời chúc của bạn là món quà ý nghĩa nhất 💝</p>
                <form class="wish-form-card" id="wishForm">
                    <div class="form-group">
                        <label>Tên của bạn <span>*</span></label>
                        <input type="text" id="wishName" placeholder="Nhập tên bạn..." required>
                    </div>
                    <div class="form-group">
                        <label>Lời chúc mừng <span>*</span></label>
                        <textarea id="wishMessage" rows="5" placeholder="Gửi những lời chúc tốt đẹp nhất đến đôi uyên ương..." required></textarea>
                    </div>
                    <button type="submit" class="wish-submit-btn">
                        <i class="fas fa-paper-plane"></i> Gửi Lời Chúc
                    </button>
                </form>
            </div>
        </div>
    </section>

    <!-- RSVP -->
    <section class="section">
        <div class="container">
            <h2 class="section-title">✅ Xác Nhận Tham Dự</h2>
            <div class="rsvp-buttons">
                <button class="rsvp-btn" onclick="handleRSVP(true)">
                    <div class="rsvp-icon">🌸</div>
                    <div class="rsvp-text">Tôi sẽ tham dự</div>
                </button>
                <button class="rsvp-btn" onclick="handleRSVP(false)">
                    <div class="rsvp-icon">💐</div>
                    <div class="rsvp-text">Không thể tham dự</div>
                </button>
            </div>
        </div>
    </section>

    <!-- CONTACTS -->
    <section class="section">
        <div class="container">
            <h2 class="section-title">📞 Liên Hệ</h2>
            <div class="contacts-grid" id="contactsGrid"></div>
        </div>
    </section>

    <!-- QR MODAL -->
    <div class="qr-modal-overlay" id="qrModalOverlay">
        <div class="qr-modal-container">
            <button class="qr-close" id="qrCloseBtn">&times;</button>
            <div class="qr-modal-body">
                <h3 class="qr-title">💕 Quét QR Mừng Cưới</h3>
                <div class="qr-code-container">
                    <img id="qrModalImage" src="" alt="QR Code">
                </div>
                <p class="qr-instruction">Mở app ngân hàng → Quét QR → Gửi lời chúc 💝</p>
            </div>
        </div>
    </div>

    <!-- FOOTER -->
    <footer class="footer">
        <div class="container">
            <div class="footer-heart-big">💖</div>
            <div class="footer-names">
                <span id="footerGroom">Chú Rể</span>
                <span>&</span>
                <span id="footerBride">Cô Dâu</span>
            </div>
            <div class="footer-date" id="footerDate">20/12/2025</div>
            <div class="footer-message">
                Cảm ơn bạn đã dành thời gian ghé thăm thiệp cưới của chúng tôi 💕
            </div>
            <div class="footer-share">
                <button class="share-btn" id="shareWedding">
                    <i class="fas fa-share-alt"></i> Chia sẻ thiệp cưới
                </button>
            </div>
        </div>
    </footer>

    <!-- Configuration -->
    <script>
        const WEDDING_CONFIG = @Html.Raw(configJson);
    </script>
  
    <script>
        
        let isMusicPlaying = false;

        // INIT APP
        document.addEventListener('DOMContentLoaded', function() {
            console.log('✅ Wedding App Initialized');
            initWedding();
        });

        function initWedding() {
            document.documentElement.style.setProperty('--hero-bg-image', `url("${WEDDING_CONFIG.heroImage}")`);
            renderHero();
            renderWeddingTimeInfo();
            renderTimeline();
            renderStories();
            renderGallery();
            renderLocation();
            renderContacts();
            setupWishesForm();
            setupScrollReveal();
            setupMusic();
            setupShare();
            setupQRModal();
            startCountdown();
            hideLoading();
        }

        function loadHeroImage(){
            const url = WEDDING_CONFIG.heroImage ?? 'https://static.vecteezy.com/system/resources/previews/023/956/948/large_2x/elegant-floral-wedding-invitation-card-free-png.png';
            document.documentElement.style.setProperty('--hero-bg-image', `url("${url}")`);
        }

                 // Tạo trái tim bay
        function createFloatingHearts() {
            const hearts = ['💕', '💖', '💗', '💝', '💓', '❤️'];
            const screen = document.getElementById('transitionScreen');

            for (let i = 0; i < 25; i++) {
                setTimeout(() => {
                    const heart = document.createElement('div');
                    heart.className = 'floating-heart';
                    heart.textContent = hearts[Math.floor(Math.random() * hearts.length)];
                    heart.style.left = Math.random() * 100 + '%';
                    heart.style.bottom = '-50px';
                    heart.style.animationDuration = (Math.random() * 2 + 3) + 's';
                    heart.style.animationDelay = Math.random() * 0.5 + 's';
                    screen.appendChild(heart);

                    setTimeout(() => heart.remove(), 6000);
                }, i * 200);
            }
        }

        // Tạo pháo hoa
        function createFirework(x, y) {
            const colors = ['#fff', '#ffe5ec', '#ffc1cc', '#ff6b9d', '#f27121'];
            const particles = 30;

            for (let i = 0; i < particles; i++) {
                const particle = document.createElement('div');
                particle.className = 'firework-particle';
                particle.style.left = x + 'px';
                particle.style.top = y + 'px';
                particle.style.background = colors[Math.floor(Math.random() * colors.length)];

                const angle = (Math.PI * 2 * i) / particles;
                const velocity = Math.random() * 100 + 50;
                const vx = Math.cos(angle) * velocity;
                const vy = Math.sin(angle) * velocity;

                document.getElementById('transitionScreen').appendChild(particle);

                let posX = x, posY = y;
                let opacity = 1;

                const animate = () => {
                    posX += vx * 0.01;
                    posY += vy * 0.01;
                    opacity -= 0.015;

                    particle.style.left = posX + 'px';
                    particle.style.top = posY + 'px';
                    particle.style.opacity = opacity;

                    if (opacity > 0) {
                        requestAnimationFrame(animate);
                    } else {
                        particle.remove();
                    }
                };

                animate();
            }
        }

        // Tạo nhiều pháo hoa
        function launchFireworks() {
            const count = 6;
            for (let i = 0; i < count; i++) {
                setTimeout(() => {
                    const x = Math.random() * window.innerWidth;
                    const y = Math.random() * (window.innerHeight * 0.6);
                    createFirework(x, y);
                }, i * 500);
            }
        }

        // Tạo sparkles
        function createSparkles() {
            const container = document.getElementById('transitionScreen');
            for (let i = 0; i < 40; i++) {
                setTimeout(() => {
                    const sparkle = document.createElement('div');
                    sparkle.className = 'transition-sparkle';
                    sparkle.style.left = Math.random() * 100 + '%';
                    sparkle.style.top = Math.random() * 100 + '%';
                    sparkle.style.animationDelay = Math.random() * 1 + 's';
                    container.appendChild(sparkle);

                    setTimeout(() => sparkle.remove(), 3000);
                }, i * 80);
            }
        }

        // Hàm chính - khởi tạo màn hình mở đầu
        function hideLoading() {
            // Hiển thị tên cô dâu chú rể
            document.getElementById('transitionGroom').textContent = WEDDING_CONFIG.groomName;
            document.getElementById('transitionBride').textContent = WEDDING_CONFIG.brideName;

            // Bắt đầu các hiệu ứng
            setTimeout(() => {
                createFloatingHearts();
                createSparkles();
            }, 500);

            // Pháo hoa đợt 1
            setTimeout(() => {
                launchFireworks();
            }, 1500);

            // Pháo hoa đợt 2
            setTimeout(() => {
                launchFireworks();
            }, 3500);

            // Ẩn transition và hiện hero section
            setTimeout(() => {
                document.getElementById('transitionScreen').classList.add('hidden');
                document.getElementById('heroSection').classList.add('active');
            }, 4000);
        }

        // HERO
        function renderHero() {
            document.getElementById('heroNames').innerHTML =
                `${WEDDING_CONFIG.groomName}<br>&<br>${WEDDING_CONFIG.brideName}`;
            document.getElementById('guestNameDisplay').textContent = WEDDING_CONFIG.guestName;
            document.getElementById('footerGroom').textContent = WEDDING_CONFIG.groomName;
            document.getElementById('footerBride').textContent = WEDDING_CONFIG.brideName;
            document.getElementById('footerDate').textContent = WEDDING_CONFIG.weddingDateDisplay;
        }

        function renderWeddingTimeInfo() {

            const weddingTimeInfo = document.getElementById('weddingTimeInfo');

            if (weddingTimeInfo) {
                weddingTimeInfo.innerHTML = `
                    <div class="info-item">
                        <span class="icon">📅</span>
                        <span class="text">${WEDDING_CONFIG.weddingDateDisplay}</span>
                    </div>
                    <div class="info-divider"></div>
                    <div class="info-item">
                        <span class="icon">⏰</span>
                        <span class="text">${WEDDING_CONFIG.weddingTime}</span>
                    </div>
                `;
            }
        }

        // COUNTDOWN
        function startCountdown() {
            const container = document.getElementById('countdownContainer');
            const weddingDate = new Date(WEDDING_CONFIG.weddingDate);

            const update = () => {
                const now = new Date().getTime();
                const distance = weddingDate - now;

                if (distance > 0) {
                    const days = Math.floor(distance / (1000 * 60 * 60 * 24));
                    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                    const seconds = Math.floor((distance % (1000 * 60)) / 1000);

                    container.innerHTML = `
                        ${makeCountItem(days, 'Ngày')}
                        ${makeCountItem(hours, 'Giờ')}
                        ${makeCountItem(minutes, 'Phút')}
                        ${makeCountItem(seconds, 'Giây')}
                    `;
                } else {
                    container.innerHTML = `<div style="font-size:36px;font-weight:800;color:var(--pink-main);padding:40px 20px;text-align:center;">💒 HÔN LỄ ĐÃ DIỄN RA 💖</div>`;
                    clearInterval(timer);
                }
            };

            const makeCountItem = (num, label) => `
                <div class="count-item">
                    <span class="count-number">${num.toString().padStart(2, '0')}</span>
                    <span class="count-label">${label}</span>
                </div>
            `;

            update();
            const timer = setInterval(update, 1000);
        }

        // TIMELINE
        function renderTimeline() {
            const timeline = WEDDING_CONFIG.timeline || [];
            const container = document.getElementById('timelineWrapper');

            if (timeline.length === 0) {
                container.innerHTML = '<div style="text-align:center;padding:60px 20px;color:var(--text-light);">Chưa có lịch trình</div>';
                return;
            }

            container.innerHTML = `
                <div class="timeline-line"></div>
                ${timeline.map(item => `
                    <div class="timeline-content">
                        <div class="timeline-time">${item.icon || '⏰'} ${item.time}</div>
                        <h3 class="timeline-title">${item.title}</h3>
                        <p class="timeline-desc">${item.desc}</p>
                    </div>
                `).join('')}
            `;
        }

        // STORIES
        function renderStories() {
            const stories = WEDDING_CONFIG.stories || [];
            const container = document.getElementById('storiesGrid');

            if (stories.length === 0) {
                container.innerHTML = '<div style="text-align:center;padding:60px 20px;color:var(--text-light);">Chưa có chuyện tình</div>';
                return;
            }

            container.innerHTML = stories.map(story => `
                <article class="story-card">
                    ${story.image ? `<img src="${story.image}" alt="${story.title}" class="story-image">` : ''}
                    <div>
                        <div class="story-icon">${story.icon || '💕'}</div>
                        <h3 class="story-title">${story.title}</h3>
                        <p class="story-text">${story.desc}</p>
                    </div>
                </article>
            `).join('');
        }

        // GALLERY
        function renderGallery() {
            const gallery = WEDDING_CONFIG.gallery || [];
            const container = document.getElementById('galleryGrid');

            if (gallery.length === 0) {
                container.innerHTML = '<div style="text-align:center;padding:60px 20px;color:var(--text-light);">Chưa có ảnh</div>';
                return;
            }

            container.innerHTML = gallery.map((img, index) => `
                <div class="gallery-item" onclick="openAlbum(${index})" style="cursor: pointer;">
                    <img src="${img}" alt="Gallery ${index + 1}" loading="lazy">
                </div>
            `).join('');

            
        }
        let currentSlide = 0;

        function openAlbum(index) {
            currentSlide = index;
            showSlide();
            document.getElementById('albumModal').classList.add('active');
            document.body.style.overflow = 'hidden';
        }

        function closeAlbum() {
            document.getElementById('albumModal').classList.remove('active');
            document.body.style.overflow = '';
        }

        function changeSlide(direction) {
            const gallery = WEDDING_CONFIG.gallery || [];
            if (gallery.length === 0) return;

            currentSlide += direction;
            if (currentSlide < 0) currentSlide = gallery.length - 1;
            if (currentSlide >= gallery.length) currentSlide = 0;
            showSlide();
        }

        function showSlide() {
            const gallery = WEDDING_CONFIG.gallery || [];
            if (gallery.length === 0) return;

            document.getElementById('albumSlide').src = gallery[currentSlide];
            document.getElementById('albumCounter').textContent = `${currentSlide + 1} / ${gallery.length}`;
        }

        document.addEventListener('keydown', (e) => {
            if (document.getElementById('albumModal').classList.contains('active')) {
                if (e.key === 'ArrowLeft') changeSlide(-1);
                if (e.key === 'ArrowRight') changeSlide(1);
                if (e.key === 'Escape') closeAlbum();
            }
        });

        document.getElementById('albumModal').addEventListener('click', (e) => {
            if (e.target.id === 'albumModal') closeAlbum();
        });


        // LOCATION
        function renderLocation() {
            const mapEmbedUrl = WEDDING_CONFIG.mapViewUrl ?
                WEDDING_CONFIG.mapViewUrl.replace('maps.google.com', 'www.google.com/maps/embed') : '';

            document.getElementById('locationWrapper').innerHTML = `
                <div class="location-main">
                    <div class="location-info">
                        <h3>${WEDDING_CONFIG.venue}</h3>
                        <p>${WEDDING_CONFIG.address}</p>
                        <a href="${WEDDING_CONFIG.mapUrl}" target="_blank" class="location-btn">
                            <i class="fas fa-map-marker-alt"></i> Mở Google Maps
                        </a>
                    </div>
                    <div class="location-map">
                        <iframe src="${mapEmbedUrl}" width="100%" height="400"
                            style="border:0;border-radius:var(--r-lg);" allowfullscreen="" loading="lazy"></iframe>
                    </div>
                </div>
            `;
        }

        // CONTACTS
        function renderContacts() {
            const contacts = WEDDING_CONFIG.contacts || [];
            const container = document.getElementById("contactsGrid");

            container.innerHTML = contacts.map((contact, index) => `
                <div class="contact-card">
                    <div class="contact-avatar">${contact.icon || "💌"}</div>
                    <div class="contact-name">${contact.name}</div>
                    ${contact.phone ? `<a href="tel:${contact.phone}" class="contact-phone">${contact.phone}</a>` : ""}
                    ${contact.qrCodeImageUrl ? `
                        <button class="qr-toggle-btn" data-qr="${contact.qrCodeImageUrl}">
                            📷 Quét QR mừng cưới
                        </button>
                    ` : ""}
                </div>
            `).join("");
        }

        // QR MODAL
        function setupQRModal() {
            document.getElementById('contactsGrid').addEventListener('click', function(e) {
                if (e.target.classList.contains('qr-toggle-btn')) {
                    const qrUrl = e.target.getAttribute('data-qr');
                    document.getElementById('qrModalImage').src = qrUrl;
                    document.getElementById('qrModalOverlay').classList.add('active');
                }
            });

            document.getElementById('qrCloseBtn').addEventListener('click', function() {
                document.getElementById('qrModalOverlay').classList.remove('active');
            });

            document.getElementById('qrModalOverlay').addEventListener('click', function(e) {
                if (e.target === this) {
                    this.classList.remove('active');
                }
            });
        }

        // WISHES FORM - UPDATED WITH API CALL
        function setupWishesForm() {
            document.getElementById('wishForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const name = e.target.querySelector('#wishName').value;
                const message = e.target.querySelector('#wishMessage').value;
                const submitBtn = e.target.querySelector('.wish-submit-btn');

                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang gửi...';

                try {
                    const response = await fetch('/api/wedding/wish', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ name, message })
                    });

                    if (response.ok) {
                        showModal('success', 'Cảm ơn bạn!', 'Lời chúc của bạn đã được gửi thành công! 💖');
                        e.target.reset();
                    } else {
                        const result = await response.json();
                        showModal('error', 'Lỗi', result.message || 'Đã có lỗi xảy ra. Vui lòng thử lại.');
                    }
                } catch (error) {
                    console.error('Wish submission error:', error);
                    showModal('error', 'Lỗi', 'Không thể kết nối đến server. Vui lòng thử lại sau.');
                } finally {
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = '<i class="fas fa-paper-plane"></i> Gửi Lời Chúc';
                }
            });
        }

        // RSVP - UPDATED WITH API CALL
        async function handleRSVP(isAttending) {
            try {
                const url = new URL(window.location.href);
                const guestId = url.searchParams.get('id') || 'default';

                const response = await fetch('/api/wedding/rsvp', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        guestId: guestId,
                        isAttending
                    })
                });

                if (response.ok) {
                    showModal(
                        'success',
                        'Cảm ơn bạn!',
                        isAttending
                            ? 'Chúng tôi rất vui được chào đón bạn tại đám cưới! 🌸'
                            : 'Cảm ơn bạn đã phản hồi. Chúng tôi rất tiếc khi bạn không thể tham dự. 💐'
                    );
                } else {
                    const result = await response.json();
                    showModal('error', 'Lỗi', result.message || 'Đã có lỗi xảy ra. Vui lòng thử lại.');
                }
            } catch (error) {
                console.error('RSVP error:', error);
                showModal('error', 'Lỗi', 'Không thể kết nối đến server. Vui lòng thử lại sau.');
            }
        }

        // MODAL - UNIFIED FUNCTION
        function showModal(type, title, message) {
            const modal = document.createElement('div');
            modal.className = 'modal-overlay active';

            const icon = type === 'success' ? '✅' : '❌';

            modal.innerHTML = `
                <div class="modal">
                    <div class="modal-icon">${icon}</div>
                    <h3>${title}</h3>
                    <p>${message}</p>
                    <button class="modal-close-btn" onclick="this.closest('.modal-overlay').remove()">
                        ${type === 'success' ? 'Đóng' : 'Thử lại'}
                    </button>
                </div>
            `;

            document.body.appendChild(modal);

            // Auto close after 5 seconds for success
            if (type === 'success') {
                setTimeout(() => {
                    if (modal.parentElement) {
                        modal.classList.remove('active');
                        setTimeout(() => modal.remove(), 300);
                    }
                }, 5000);
            }
        }

        // MUSIC
                function setupMusic() {
            const control = document.getElementById('musicControl');
            const music = document.getElementById('bgMusic');
            const icon = control.querySelector('i');

            if (WEDDING_CONFIG.musicUrl) {
                document.getElementById('musicSource').src = WEDDING_CONFIG.musicUrl;
                music.load();
            }

            // Hàm toggle music
            const toggleMusic = () => {
                if (isMusicPlaying) {
                    music.pause();
                    isMusicPlaying = false;
                    icon.className = 'fas fa-play';
                    control.classList.remove('playing');
                } else {
                    music.play().catch(err => console.log('Music play error:', err));
                    isMusicPlaying = true;
                    icon.className = 'fas fa-pause';
                    control.classList.add('playing');
                }
            };

            // Click vào nút music
            control.addEventListener('click', toggleMusic);

            // TỰ ĐỘNG PHÁT khi user tương tác lần đầu với trang
            const autoPlayOnInteraction = () => {
                if (!isMusicPlaying) {
                    music.play()
                        .then(() => {
                            isMusicPlaying = true;
                            icon.className = 'fas fa-pause';
                            control.classList.add('playing');
                            console.log('🎵 Music auto-started');
                        })
                        .catch(err => console.log('Autoplay blocked:', err));
                }
                // Chỉ chạy 1 lần
                document.removeEventListener('click', autoPlayOnInteraction);
                document.removeEventListener('touchstart', autoPlayOnInteraction);
                document.removeEventListener('scroll', autoPlayOnInteraction);
            };

            // Lắng nghe tương tác đầu tiên
            document.addEventListener('click', autoPlayOnInteraction, { once: true });
            document.addEventListener('touchstart', autoPlayOnInteraction, { once: true });
            document.addEventListener('scroll', autoPlayOnInteraction, { once: true });
        }

        // SCROLL REVEAL
        function setupScrollReveal() {
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('active');
                    }
                });
            }, { threshold: 0.1 });

            document.querySelectorAll('.section').forEach(el => observer.observe(el));
        }

        // SHARE
        function setupShare() {
            document.getElementById('shareWedding').addEventListener('click', async () => {
                const shareData = {
                    title: `Thiệp cưới ${WEDDING_CONFIG.groomName} & ${WEDDING_CONFIG.brideName}`,
                    text: `Mời bạn đến dự lễ cưới của ${WEDDING_CONFIG.groomName} và ${WEDDING_CONFIG.brideName}`,
                    url: window.location.href
                };

                try {
                    if (navigator.share) {
                        await navigator.share(shareData);
                    } else {
                        await navigator.clipboard.writeText(window.location.href);
                        showModal('success', 'Đã sao chép!', 'Link thiệp cưới đã được sao chép vào clipboard! 📋');
                    }
                } catch (err) {
                    if (err.name !== 'AbortError') {
                        console.error('Share error:', err);
                    }
                }
            });
        }
    </script>
</body>
</html>