@{
    ViewData["Title"] = "Đăng nhập - Wedding Manager";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Playfair+Display:wght@600;700&family=Dancing+Script:wght@600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --pink: #ec4899;
            --pink-dark: #db2777;
            --pink-light: #fbcfe8;
            --pink-lighter: #fce7f3;
            --gray: #6b7280;
            --gray-dark: #374151;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #fff5f7 0%, #ffe5f1 25%, #fff0f8 50%, #fce4ec 75%, #fff5f7 100%);
            background-size: 400% 400%;
            animation: gradientShift 20s ease infinite;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 1rem;
        }

        @@keyframes gradientShift {
            0%, 100%

        {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        }

        /* Floating hearts animation */
        .heart-container {
            position: fixed;
            inset: 0;
            overflow: hidden;
            pointer-events: none;
            z-index: 1;
        }

        .floating-heart {
            position: absolute;
            font-size: 2rem;
            opacity: 0;
            animation: floatUp 8s ease-in infinite;
        }

        @@keyframes floatUp {
            0%

        {
            opacity: 0;
            transform: translateY(0) rotate(0deg);
        }

        10% {
            opacity: 0.8;
        }

        90% {
            opacity: 0.3;
        }

        100% {
            opacity: 0;
            transform: translateY(-100vh) rotate(360deg);
        }

        }

        /* Login container */
        .login-container {
            position: relative;
            z-index: 10;
            width: 100%;
            max-width: 450px;
            animation: fadeInScale 0.6s ease-out;
        }

        @@keyframes fadeInScale {
            from

        {
            opacity: 0;
            transform: scale(0.9) translateY(20px);
        }

        to {
            opacity: 1;
            transform: scale(1) translateY(0);
        }

        }

        .login-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 30px;
            padding: 3rem 2.5rem;
            box-shadow: 0 20px 60px rgba(236, 72, 153, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.8);
        }

        .login-header {
            text-align: center;
            margin-bottom: 2.5rem;
        }

        .login-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
            animation: heartbeat 2s ease-in-out infinite;
        }

        @@keyframes heartbeat {
            0%, 100%

        {
            transform: scale(1);
        }

        50% {
            transform: scale(1.1);
        }

        }

        .login-title {
            font-family: 'Playfair Display', serif;
            font-size: 2rem;
            color: var(--pink);
            margin-bottom: 0.5rem;
            text-shadow: 0 2px 10px rgba(236, 72, 153, 0.2);
        }

        .login-subtitle {
            color: var(--gray);
            font-size: 0.95rem;
        }

        .divider {
            width: 80px;
            height: 3px;
            background: linear-gradient(90deg, transparent, var(--pink), transparent);
            margin: 1.5rem auto 0;
            border-radius: 2px;
        }

        /* Form */
        .login-form {
            margin-bottom: 1.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        label {
            display: block;
            font-weight: 600;
            color: var(--gray-dark);
            margin-bottom: 0.75rem;
            font-size: 0.95rem;
        }

        .input-wrapper {
            position: relative;
        }

        .input-icon {
            position: absolute;
            left: 1.25rem;
            top: 50%;
            transform: translateY(-50%);
            font-size: 1.25rem;
            color: var(--gray);
            pointer-events: none;
        }

        input[type="password"] {
            width: 100%;
            padding: 1rem 1.25rem 1rem 3.5rem;
            border: 2px solid #e5e7eb;
            border-radius: 15px;
            font-size: 1rem;
            font-family: 'Inter', sans-serif;
            transition: all 0.3s ease;
            background: white;
        }

            input[type="password"]:focus {
                outline: none;
                border-color: var(--pink);
                box-shadow: 0 0 0 4px rgba(236, 72, 153, 0.1);
            }

        .toggle-password {
            position: absolute;
            right: 1.25rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1.25rem;
            color: var(--gray);
            transition: color 0.3s ease;
        }

            .toggle-password:hover {
                color: var(--pink);
            }

        .btn-login {
            width: 100%;
            padding: 1.1rem 2rem;
            background: linear-gradient(135deg, var(--pink), var(--pink-dark));
            color: white;
            border: none;
            border-radius: 15px;
            font-size: 1.05rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 8px 20px rgba(236, 72, 153, 0.3);
            position: relative;
            overflow: hidden;
        }

            .btn-login::before {
                content: '';
                position: absolute;
                top: 50%;
                left: 50%;
                width: 0;
                height: 0;
                border-radius: 50%;
                background: rgba(255, 255, 255, 0.3);
                transform: translate(-50%, -50%);
                transition: width 0.6s, height 0.6s;
            }

            .btn-login:hover::before {
                width: 300px;
                height: 300px;
            }

            .btn-login:hover {
                transform: translateY(-2px);
                box-shadow: 0 12px 30px rgba(236, 72, 153, 0.4);
            }

            .btn-login:active {
                transform: translateY(0);
            }

            .btn-login:disabled {
                opacity: 0.6;
                cursor: not-allowed;
                transform: none;
            }

            .btn-login span {
                position: relative;
                z-index: 1;
            }

            .btn-login.loading span::after {
                content: '';
                margin-left: 10px;
                display: inline-block;
                width: 16px;
                height: 16px;
                border: 2px solid rgba(255, 255, 255, 0.3);
                border-top-color: white;
                border-radius: 50%;
                animation: spin 0.6s linear infinite;
            }

        @@keyframes spin {
            to

        {
            transform: rotate(360deg);
        }

        }

        /* Alert */
        .alert {
            padding: 1rem 1.25rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            display: none;
            animation: slideDown 0.4s ease-out;
        }

        @@keyframes slideDown {
            from

        {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .alert.show {
            display: block;
        }

        .alert-error {
            background: #fee2e2;
            color: #991b1b;
            border-left: 4px solid #dc2626;
        }

        .alert-success {
            background: #d1fae5;
            color: #065f46;
            border-left: 4px solid #10b981;
        }

        .alert-icon {
            margin-right: 8px;
        }

        /* Footer */
        .login-footer {
            text-align: center;
            color: var(--gray);
            font-size: 0.875rem;
            margin-top: 2rem;
        }

            .login-footer a {
                color: var(--pink);
                text-decoration: none;
                font-weight: 600;
                transition: color 0.3s ease;
            }

                .login-footer a:hover {
                    color: var(--pink-dark);
                }

        /* Responsive */
        @@media (max-width: 480px) {
            .login-card

        {
            padding: 2rem 1.5rem;
        }

        .login-title {
            font-size: 1.75rem;
        }

        .login-icon {
            font-size: 3rem;
        }

        }
    </style>
</head>
<body>
    <!-- Floating hearts background -->
    <div class="heart-container" id="heartContainer"></div>

    <!-- Login container -->
    <div class="login-container">
        <div class="login-card">
            <!-- Header -->
            <div class="login-header">
                <div class="login-icon">💕</div>
                <h1 class="login-title">Wedding Manager</h1>
                <p class="login-subtitle">Quản lý thiệp cưới của bạn</p>
                <div class="divider"></div>
            </div>

            <!-- Alert -->
            <div class="alert alert-error" id="alert">
                <span class="alert-icon">⚠️</span>
                <span id="alertMessage">Mật khẩu không chính xác!</span>
            </div>

            <!-- Login form -->
            <form class="login-form" id="loginForm">
                <div class="form-group">
                    <label for="password">Mật khẩu</label>
                    <div class="input-wrapper">
                        <span class="input-icon">🔒</span>
                        <input type="password"
                               id="password"
                               name="password"
                               placeholder="Nhập mật khẩu..."
                               required
                               autocomplete="current-password" />
                        <button type="button" class="toggle-password" id="togglePassword">
                            👁️
                        </button>
                    </div>
                </div>

                <button type="submit" class="btn-login" id="btnLogin">
                    <span>Đăng nhập</span>
                </button>
            </form>

            <!-- Footer -->
            <div class="login-footer">
                <p>Made with 💖 by Wedding Manager</p>
            </div>
        </div>
    </div>

    <script>
        // Elements
        const form = document.getElementById('loginForm');
        const passwordInput = document.getElementById('password');
        const btnLogin = document.getElementById('btnLogin');
        const alert = document.getElementById('alert');
        const alertMessage = document.getElementById('alertMessage');
        const togglePassword = document.getElementById('togglePassword');
        const heartContainer = document.getElementById('heartContainer');

        // Toggle password visibility
        togglePassword.addEventListener('click', () => {
            const type = passwordInput.type === 'password' ? 'text' : 'password';
            passwordInput.type = type;
            togglePassword.textContent = type === 'password' ? '👁️' : '🙈';
        });

        // Show alert
        function showAlert(message, type = 'error') {
            alertMessage.textContent = message;
            alert.className = `alert alert-${type} show`;

            setTimeout(() => {
                alert.classList.remove('show');
            }, 5000);
        }

        // Hide alert on input
        passwordInput.addEventListener('input', () => {
            alert.classList.remove('show');
        });

        // Form submit
        form.addEventListener('submit', async (e) => {
            e.preventDefault();

            const password = passwordInput.value.trim();

            if (!password) {
                showAlert('Vui lòng nhập mật khẩu!', 'error');
                return;
            }

            // Show loading state
            btnLogin.disabled = true;
            btnLogin.classList.add('loading');

            try {
                const response = await fetch('/api/wedding/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ password })
                });

                if (response.ok) {
                    showAlert('Đăng nhập thành công! Đang chuyển hướng...', 'success');

                    // Create success hearts animation
                    createSuccessHearts();

                    // Redirect after animation
                    setTimeout(() => {
                        window.location.href = '/api/wedding/manager';
                    }, 1500);
                } else {
                    const errorText = await response.text();
                    showAlert(errorText || 'Mật khẩu không chính xác!', 'error');

                    // Shake animation
                    form.style.animation = 'shake 0.5s';
                    setTimeout(() => {
                        form.style.animation = '';
                    }, 500);
                }
            } catch (error) {
                console.error('Login error:', error);
                showAlert('Lỗi kết nối! Vui lòng thử lại.', 'error');
            } finally {
                btnLogin.disabled = false;
                btnLogin.classList.remove('loading');
            }
        });

        // Shake animation for error
        const style = document.createElement('style');
        style.textContent = `
            @@keyframes shake {
                0%, 100% { transform: translateX(0); }
                10%, 30%, 50%, 70%, 90% { transform: translateX(-10px); }
                20%, 40%, 60%, 80% { transform: translateX(10px); }
            }
        `;
        document.head.appendChild(style);

        // Create floating hearts
        function createFloatingHeart() {
            const heart = document.createElement('div');
            heart.className = 'floating-heart';
            heart.textContent = ['💕', '💖', '💗', '💝'][Math.floor(Math.random() * 4)];
            heart.style.left = Math.random() * 100 + '%';
            heart.style.animationDelay = Math.random() * 2 + 's';
            heart.style.animationDuration = (Math.random() * 3 + 5) + 's';
            heartContainer.appendChild(heart);

            setTimeout(() => {
                heart.remove();
            }, 8000);
        }

        // Create hearts periodically
        setInterval(createFloatingHeart, 1000);

        // Create success hearts burst
        function createSuccessHearts() {
            for (let i = 0; i < 20; i++) {
                setTimeout(() => {
                    const heart = document.createElement('div');
                    heart.style.position = 'fixed';
                    heart.style.left = '50%';
                    heart.style.top = '50%';
                    heart.style.fontSize = '2rem';
                    heart.style.zIndex = '9999';
                    heart.textContent = '💖';
                    heart.style.animation = `burstHeart ${Math.random() * 0.5 + 0.5}s ease-out forwards`;
                    heart.style.transform = `translate(-50%, -50%) rotate(${Math.random() * 360}deg)`;
                    document.body.appendChild(heart);

                    const style = document.createElement('style');
                    style.textContent = `
                        @@keyframes burstHeart {
                            to {
                                transform: translate(${(Math.random() - 0.5) * 400}px, ${(Math.random() - 0.5) * 400}px)
                                           rotate(${Math.random() * 720}deg) scale(0);
                                opacity: 0;
                            }
                        }
                    `;
                    document.head.appendChild(style);

                    setTimeout(() => {
                        heart.remove();
                        style.remove();
                    }, 1000);
                }, i * 50);
            }
        }

        // Auto-focus password input
        passwordInput.focus();

        // Enter key to submit
        passwordInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                form.dispatchEvent(new Event('submit'));
            }
        });

        console.log('💕 Wedding Manager Login loaded successfully!');
    </script>
</body>
</html>