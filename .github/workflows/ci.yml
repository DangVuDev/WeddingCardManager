name: Build, Test & Deploy WeddingServer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 🧩 1. Lấy source code
      - name: Checkout source
        uses: actions/checkout@v4

      # 🧰 2. Cài đặt .NET SDK 8.0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # 🧱 3. Restore dependencies
      - name: Restore dependencies
        run: dotnet restore WeddingServer/WeddingServer.csproj

      # 🧪 4. Build project
      - name: Build
        run: dotnet build WeddingServer/WeddingServer.csproj --configuration Release --no-restore

      # ✅ 5. Run tests (nếu có)
      - name: Test
        run: dotnet test --no-build --verbosity normal
        continue-on-error: true

      # 🐳 6. Build Docker image (sửa đường dẫn đúng vị trí Dockerfile)
      - name: Build Docker image
        run: docker build -t weddingserver:latest -f WeddingServer/Dockerfile WeddingServer

      # 📦 7. Save Docker image để upload
      - name: Save Docker image
        run: docker save weddingserver:latest -o weddingserver.tar

      # 🚀 8. Upload Docker image lên server
      - name: Upload Docker image
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          port: 24700
          source: "weddingserver.tar"
          target: "/root/"

      # ⚙️ 9. Deploy container trên VPS
      - name: Deploy container on VPS
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          port: 24700
          script: |
            echo "🚀 Deploying WeddingServer container..."
            docker load -i /root/weddingserver.tar
            docker stop weddingserver || true
            docker rm weddingserver || true
            docker run -d \
              --name weddingserver \
              -p 80:8080 \
              -e aspnetcore_environment=Production \
              -e password="${{ secrets.ADMIN_PASSWORD }}" \
              -e cloudinary__cloudname="${{ secrets.CLOUDINARY_NAME }}" \
              -e cloudinary__apikey="${{ secrets.CLOUDINARY_KEY }}" \
              -e cloudinary__apisecret="${{ secrets.CLOUDINARY_SECRET }}" \
              -e mongosettings__databasewedding1__connectionstring="${{ secrets.MONGO_URI }}" \
              -e mongosettings__databasewedding1__databasename=WeddingManager \
              weddingserver:latest
            echo "✅ Deployment successful!"
